scalar Date

type Animal {
  id: ID!
  animal_name: String!
  species: Species!
  birthdate: Date!
  gender: Gender!
  location: GeoPoint!
  owner: User!
  image: String!
}

enum Gender {
  Male
  Female
}

type Query {
  animals: [Animal]
  animal(id: ID!): Animal
}

input InputAnimal {
  animal_name: String! @constraint(pattern: "^[^';`/\\(){}]*$")
  species_id: ID!
  birthdate: Date!
  gender: Gender!
  location: InputGeoPoint!
  image: String!
}

input UpdateAnimal {
  animal_name: String!
  species_id: ID!
  birthdate: Date!
  gender: Gender!
  location: InputGeoPoint!
}

type Mutation {
  """
  Token is required to access this operation
  """
  addAnimal(input: InputAnimal): Animal

  """
  Token is required to access this operation
  """
  deleteAnimal(id: ID!): Animal

  """
  Token is required to access this operation
  """
  updateAnimal(id: ID!, input: UpdateAnimal!): Animal
}
